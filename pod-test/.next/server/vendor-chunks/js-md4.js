/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/js-md4";
exports.ids = ["vendor-chunks/js-md4"];
exports.modules = {

/***/ "(rsc)/../node_modules/js-md4/src/md4.js":
/*!*****************************************!*\
  !*** ../node_modules/js-md4/src/md4.js ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * [js-md4]{@link https://github.com/emn178/js-md4}\r\n *\r\n * @namespace md4\r\n * @version 0.3.2\r\n * @author Yi-Cyuan Chen [emn178@gmail.com]\r\n * @copyright Yi-Cyuan Chen 2015-2027\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n  'use strict';\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_MD4_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  }\r\n  var COMMON_JS = !root.JS_MD4_NO_COMMON_JS && \"object\" === 'object' && module.exports;\r\n  var AMD =  true && __webpack_require__.amdO;\r\n  var ARRAY_BUFFER = !root.JS_MD4_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var EXTRA = [128, 32768, 8388608, -2147483648];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer'];\r\n\r\n  var blocks = [], buffer8;\r\n  if (ARRAY_BUFFER) {\r\n    var buffer = new ArrayBuffer(68);\r\n    buffer8 = new Uint8Array(buffer);\r\n    blocks = new Uint32Array(buffer);\r\n  }\r\n\r\n  /**\r\n   * @method hex\r\n   * @memberof md4\r\n   * @description Output hash as hex string\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {String} Hex string\r\n   * @example\r\n   * md4.hex('The quick brown fox jumps over the lazy dog');\r\n   * // equal to\r\n   * md4('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  /**\r\n   * @method digest\r\n   * @memberof md4\r\n   * @description Output hash as bytes array\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {Array} Bytes array\r\n   * @example\r\n   * md4.digest('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  /**\r\n   * @method array\r\n   * @memberof md4\r\n   * @description Output hash as bytes array\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {Array} Bytes array\r\n   * @example\r\n   * md4.array('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  /**\r\n   * @method buffer\r\n   * @memberof md4\r\n   * @description Output hash as ArrayBuffer\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {ArrayBuffer} ArrayBuffer\r\n   * @example\r\n   * md4.buffer('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  var createOutputMethod = function (outputType) {\r\n    return function(message) {\r\n      return new Md4(true).update(message)[outputType]();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @method create\r\n   * @memberof md4\r\n   * @description Create Md4 object\r\n   * @returns {Md4} MD4 object.\r\n   * @example\r\n   * var hash = md4.create();\r\n   */\r\n  /**\r\n   * @method update\r\n   * @memberof md4\r\n   * @description Create and update Md4 object\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {Md4} MD4 object.\r\n   * @example\r\n   * var hash = md4.update('The quick brown fox jumps over the lazy dog');\r\n   * // equal to\r\n   * var hash = md4.create();\r\n   * hash.update('The quick brown fox jumps over the lazy dog');\r\n   */\r\n  var createMethod = function () {\r\n    var method = createOutputMethod('hex');\r\n    if (NODE_JS) {\r\n      method = nodeWrap(method);\r\n    }\r\n    method.create = function () {\r\n      return new Md4();\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var nodeWrap = function (method) {\r\n    var crypto = __webpack_require__(/*! crypto */ \"crypto\");\r\n    var Buffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\r\n    var nodeMethod = function (message) {\r\n      if (typeof message === 'string') {\r\n        return crypto.createHash('md4').update(message, 'utf8').digest('hex');\r\n      } else if (ARRAY_BUFFER && message instanceof ArrayBuffer) {\r\n        message = new Uint8Array(message);\r\n      } else if (message.length === undefined) {\r\n        return method(message);\r\n      }\r\n      return crypto.createHash('md4').update(new Buffer(message)).digest('hex');\r\n    };\r\n    return nodeMethod;\r\n  };\r\n\r\n  /**\r\n   * Md4 class\r\n   * @class Md4\r\n   * @description This is internal class.\r\n   * @see {@link md4.create}\r\n   */\r\n  function Md4(sharedMemory) {\r\n    if (sharedMemory) {\r\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n      this.blocks = blocks;\r\n      this.buffer8 = buffer8;\r\n    } else {\r\n      if (ARRAY_BUFFER) {\r\n        var buffer = new ArrayBuffer(68);\r\n        this.buffer8 = new Uint8Array(buffer);\r\n        this.blocks = new Uint32Array(buffer);\r\n      } else {\r\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n      }\r\n    }\r\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = 0;\r\n    this.finalized = this.hashed = false;\r\n    this.first = true;\r\n  }\r\n\r\n  /**\r\n   * @method update\r\n   * @memberof Md4\r\n   * @instance\r\n   * @description Update hash\r\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n   * @returns {Md4} MD4 object.\r\n   * @see {@link md4.update}\r\n   */\r\n  Md4.prototype.update = function (message) {\r\n    if (this.finalized) {\r\n      return;\r\n    }\r\n    var notString = typeof message !== 'string';\r\n    if (notString && ARRAY_BUFFER && message instanceof ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\r\n    var buffer8 = this.buffer8;\r\n\r\n    while (index < length) {\r\n      if (this.hashed) {\r\n        this.hashed = false;\r\n        blocks[0] = blocks[16];\r\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n      }\r\n\r\n      if (notString) {\r\n        if (ARRAY_BUFFER) {\r\n          for (i = this.start; index < length && i < 64; ++index) {\r\n            buffer8[i++] = message[index];\r\n          }\r\n        } else {\r\n          for (i = this.start; index < length && i < 64; ++index) {\r\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      } else {\r\n        if (ARRAY_BUFFER) {\r\n          for (i = this.start; index < length && i < 64; ++index) {\r\n            code = message.charCodeAt(index);\r\n            if (code < 0x80) {\r\n              buffer8[i++] = code;\r\n            } else if (code < 0x800) {\r\n              buffer8[i++] = 0xc0 | (code >> 6);\r\n              buffer8[i++] = 0x80 | (code & 0x3f);\r\n            } else if (code < 0xd800 || code >= 0xe000) {\r\n              buffer8[i++] = 0xe0 | (code >> 12);\r\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\r\n              buffer8[i++] = 0x80 | (code & 0x3f);\r\n            } else {\r\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n              buffer8[i++] = 0xf0 | (code >> 18);\r\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\r\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\r\n              buffer8[i++] = 0x80 | (code & 0x3f);\r\n            }\r\n          }\r\n        } else {\r\n          for (i = this.start; index < length && i < 64; ++index) {\r\n            code = message.charCodeAt(index);\r\n            if (code < 0x80) {\r\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n            } else if (code < 0x800) {\r\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n            } else if (code < 0xd800 || code >= 0xe000) {\r\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n            } else {\r\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      this.bytes += i - this.start;\r\n      if (i >= 64) {\r\n        this.start = i - 64;\r\n        this.hash();\r\n        this.hashed = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Md4.prototype.finalize = function () {\r\n    if (this.finalized) {\r\n      return;\r\n    }\r\n    this.finalized = true;\r\n    var blocks = this.blocks, i = this.lastByteIndex;\r\n    blocks[i >> 2] |= EXTRA[i & 3];\r\n    if (i >= 56) {\r\n      if (!this.hashed) {\r\n        this.hash();\r\n      }\r\n      blocks[0] = blocks[16];\r\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n    }\r\n    blocks[14] = this.bytes << 3;\r\n    this.hash();\r\n  };\r\n\r\n  Md4.prototype.hash = function () {\r\n    var a, b, c, d, ab, bc, cd, da, blocks = this.blocks;\r\n\r\n    if (this.first) {\r\n      a = blocks[0] - 1;\r\n      a = (a << 3) | (a >>> 29);\r\n      d = ((a & 0xefcdab89) | (~a & 0x98badcfe)) + blocks[1] + 271733878;\r\n      d = (d << 7) | (d >>> 25);\r\n      c = ((d & a) | (~d & 0xefcdab89)) + blocks[2] - 1732584194;\r\n      c = (c << 11) | (c >>> 21);\r\n      b = ((c & d) | (~c & a)) + blocks[3] - 271733879;\r\n      b = (b << 19) | (b >>> 13);\r\n    } else {\r\n      a = this.h0;\r\n      b = this.h1;\r\n      c = this.h2;\r\n      d = this.h3;\r\n      a += ((b & c) | (~b & d)) + blocks[0];\r\n      a = (a << 3) | (a >>> 29);\r\n      d += ((a & b) | (~a & c)) + blocks[1];\r\n      d = (d << 7) | (d >>> 25);\r\n      c += ((d & a) | (~d & b)) + blocks[2];\r\n      c = (c << 11) | (c >>> 21);\r\n      b += ((c & d) | (~c & a)) + blocks[3];\r\n      b = (b << 19) | (b >>> 13);\r\n    }\r\n    a += ((b & c) | (~b & d)) + blocks[4];\r\n    a = (a << 3) | (a >>> 29);\r\n    d += ((a & b) | (~a & c)) + blocks[5];\r\n    d = (d << 7) | (d >>> 25);\r\n    c += ((d & a) | (~d & b)) + blocks[6];\r\n    c = (c << 11) | (c >>> 21);\r\n    b += ((c & d) | (~c & a)) + blocks[7];\r\n    b = (b << 19) | (b >>> 13);\r\n    a += ((b & c) | (~b & d)) + blocks[8];\r\n    a = (a << 3) | (a >>> 29);\r\n    d += ((a & b) | (~a & c)) + blocks[9];\r\n    d = (d << 7) | (d >>> 25);\r\n    c += ((d & a) | (~d & b)) + blocks[10];\r\n    c = (c << 11) | (c >>> 21);\r\n    b += ((c & d) | (~c & a)) + blocks[11];\r\n    b = (b << 19) | (b >>> 13);\r\n    a += ((b & c) | (~b & d)) + blocks[12];\r\n    a = (a << 3) | (a >>> 29);\r\n    d += ((a & b) | (~a & c)) + blocks[13];\r\n    d = (d << 7) | (d >>> 25);\r\n    c += ((d & a) | (~d & b)) + blocks[14];\r\n    c = (c << 11) | (c >>> 21);\r\n    b += ((c & d) | (~c & a)) + blocks[15];\r\n    b = (b << 19) | (b >>> 13);\r\n\r\n    bc = b & c;\r\n    a += (bc | (b & d) | (c & d)) + blocks[0] + 1518500249;\r\n    a = (a << 3) | (a >>> 29);\r\n    ab = a & b;\r\n    d += (ab | (a & c) | bc) + blocks[4] + 1518500249;\r\n    d = (d << 5) | (d >>> 27);\r\n    da = d & a;\r\n    c += (da | (d & b) | ab) + blocks[8] + 1518500249;\r\n    c = (c << 9) | (c >>> 23);\r\n    cd = c & d;\r\n    b += (cd | (c & a) | da) + blocks[12] + 1518500249;\r\n    b = (b << 13) | (b >>> 19);\r\n    bc = b & c;\r\n    a += (bc | (b & d) | cd) + blocks[1] + 1518500249;\r\n    a = (a << 3) | (a >>> 29);\r\n    ab = a & b;\r\n    d += (ab | (a & c) | bc) + blocks[5] + 1518500249;\r\n    d = (d << 5) | (d >>> 27);\r\n    da = d & a;\r\n    c += (da | (d & b) | ab) + blocks[9] + 1518500249;\r\n    c = (c << 9) | (c >>> 23);\r\n    cd = c & d;\r\n    b += (cd | (c & a) | da) + blocks[13] + 1518500249;\r\n    b = (b << 13) | (b >>> 19);\r\n    bc = b & c;\r\n    a += (bc | (b & d) | cd) + blocks[2] + 1518500249;\r\n    a = (a << 3) | (a >>> 29);\r\n    ab = a & b;\r\n    d += (ab | (a & c) | bc) + blocks[6] + 1518500249;\r\n    d = (d << 5) | (d >>> 27);\r\n    da = d & a;\r\n    c += (da | (d & b) | ab) + blocks[10] + 1518500249;\r\n    c = (c << 9) | (c >>> 23);\r\n    cd = c & d;\r\n    b += (cd | (c & a) | da) + blocks[14] + 1518500249;\r\n    b = (b << 13) | (b >>> 19);\r\n    bc = b & c;\r\n    a += (bc | (b & d) | cd) + blocks[3] + 1518500249;\r\n    a = (a << 3) | (a >>> 29);\r\n    ab = a & b;\r\n    d += (ab | (a & c) | bc) + blocks[7] + 1518500249;\r\n    d = (d << 5) | (d >>> 27);\r\n    da = d & a;\r\n    c += (da | (d & b) | ab) + blocks[11] + 1518500249;\r\n    c = (c << 9) | (c >>> 23);\r\n    b += ((c & d) | (c & a) | da) + blocks[15] + 1518500249;\r\n    b = (b << 13) | (b >>> 19);\r\n\r\n    bc = b ^ c;\r\n    a += (bc ^ d) + blocks[0] + 1859775393;\r\n    a = (a << 3) | (a >>> 29);\r\n    d += (bc ^ a) + blocks[8] + 1859775393;\r\n    d = (d << 9) | (d >>> 23);\r\n    da = d ^ a;\r\n    c += (da ^ b) + blocks[4] + 1859775393;\r\n    c = (c << 11) | (c >>> 21);\r\n    b += (da ^ c) + blocks[12] + 1859775393;\r\n    b = (b << 15) | (b >>> 17);\r\n    bc = b ^ c;\r\n    a += (bc ^ d) + blocks[2] + 1859775393;\r\n    a = (a << 3) | (a >>> 29);\r\n    d += (bc ^ a) + blocks[10] + 1859775393;\r\n    d = (d << 9) | (d >>> 23);\r\n    da = d ^ a;\r\n    c += (da ^ b) + blocks[6] + 1859775393;\r\n    c = (c << 11) | (c >>> 21);\r\n    b += (da ^ c) + blocks[14] + 1859775393;\r\n    b = (b << 15) | (b >>> 17);\r\n    bc = b ^ c;\r\n    a += (bc ^ d) + blocks[1] + 1859775393;\r\n    a = (a << 3) | (a >>> 29);\r\n    d += (bc ^ a) + blocks[9] + 1859775393;\r\n    d = (d << 9) | (d >>> 23);\r\n    da = d ^ a;\r\n    c += (da ^ b) + blocks[5] + 1859775393;\r\n    c = (c << 11) | (c >>> 21);\r\n    b += (da ^ c) + blocks[13] + 1859775393;\r\n    b = (b << 15) | (b >>> 17);\r\n    bc = b ^ c;\r\n    a += (bc ^ d) + blocks[3] + 1859775393;\r\n    a = (a << 3) | (a >>> 29);\r\n    d += (bc ^ a) + blocks[11] + 1859775393;\r\n    d = (d << 9) | (d >>> 23);\r\n    da = d ^ a;\r\n    c += (da ^ b) + blocks[7] + 1859775393;\r\n    c = (c << 11) | (c >>> 21);\r\n    b += (da ^ c) + blocks[15] + 1859775393;\r\n    b = (b << 15) | (b >>> 17);\r\n\r\n    if (this.first) {\r\n      this.h0 = a + 1732584193 << 0;\r\n      this.h1 = b - 271733879 << 0;\r\n      this.h2 = c - 1732584194 << 0;\r\n      this.h3 = d + 271733878 << 0;\r\n      this.first = false;\r\n    } else {\r\n      this.h0 = this.h0 + a << 0;\r\n      this.h1 = this.h1 + b << 0;\r\n      this.h2 = this.h2 + c << 0;\r\n      this.h3 = this.h3 + d << 0;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @method hex\r\n   * @memberof Md4\r\n   * @instance\r\n   * @description Output hash as hex string\r\n   * @returns {String} Hex string\r\n   * @see {@link md4.hex}\r\n   * @example\r\n   * hash.hex();\r\n   */\r\n  Md4.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\r\n\r\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\r\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\r\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\r\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\r\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\r\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\r\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\r\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\r\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\r\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\r\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\r\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\r\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\r\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\r\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\r\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\r\n  };\r\n\r\n  /**\r\n   * @method toString\r\n   * @memberof Md4\r\n   * @instance\r\n   * @description Output hash as hex string\r\n   * @returns {String} Hex string\r\n   * @see {@link md4.hex}\r\n   * @example\r\n   * hash.toString();\r\n   */\r\n  Md4.prototype.toString = Md4.prototype.hex;\r\n\r\n  /**\r\n   * @method digest\r\n   * @memberof Md4\r\n   * @instance\r\n   * @description Output hash as bytes array\r\n   * @returns {Array} Bytes array\r\n   * @see {@link md4.digest}\r\n   * @example\r\n   * hash.digest();\r\n   */\r\n  Md4.prototype.digest = function() {\r\n    this.finalize();\r\n\r\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\r\n    return [\r\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\r\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\r\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\r\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * @method array\r\n   * @memberof Md4\r\n   * @instance\r\n   * @description Output hash as bytes array\r\n   * @returns {Array} Bytes array\r\n   * @see {@link md4.array}\r\n   * @example\r\n   * hash.array();\r\n   */\r\n  Md4.prototype.array = Md4.prototype.digest;\r\n\r\n  /**\r\n   * @method arrayBuffer\r\n   * @memberof Md4\r\n   * @instance\r\n   * @description Output hash as ArrayBuffer\r\n   * @returns {ArrayBuffer} ArrayBuffer\r\n   * @see {@link md4.arrayBuffer}\r\n   * @example\r\n   * hash.arrayBuffer();\r\n   */\r\n  Md4.prototype.arrayBuffer = function() {\r\n    this.finalize();\r\n\r\n    var buffer = new ArrayBuffer(16);\r\n    var blocks = new Uint32Array(buffer);\r\n    blocks[0] = this.h0;\r\n    blocks[1] = this.h1;\r\n    blocks[2] = this.h2;\r\n    blocks[3] = this.h3;\r\n    return buffer;\r\n  };\r\n\r\n  /**\r\n   * @method buffer\r\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\r\n   * @memberof Md4\r\n   * @instance\r\n   * @description Output hash as ArrayBuffer\r\n   * @returns {ArrayBuffer} ArrayBuffer\r\n   * @see {@link md4.buffer}\r\n   * @example\r\n   * hash.buffer();\r\n   */\r\n  Md4.prototype.buffer = Md4.prototype.arrayBuffer;\r\n\r\n  var exports = createMethod();\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = exports;\r\n  } else {\r\n    /**\r\n     * @method md4\b\r\n     * @description MD4 hash function, export to global in browsers.\r\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\r\n     * @returns {String} md4 hashes\r\n     * @example\r\n     * md4(''); // 31d6cfe0d16ae931b73c59d7e0c089c0\r\n     * md4('The quick brown fox jumps over the lazy dog'); // 1bee69a46ba811185c194762abaeae90\r\n     * md4('The quick brown fox jumps over the lazy dog.'); // 2812c6c7136898c51f6f6739ad08750e\r\n     *\r\n     * // It also supports UTF-8 encoding\r\n     * md4('中文'); // 223088bf7bd45a16436b15360c5fc5a0\r\n     *\r\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\r\n     * md4([]); // 31d6cfe0d16ae931b73c59d7e0c089c0\r\n     * md4(new Uint8Array([])); // 31d6cfe0d16ae931b73c59d7e0c089c0\r\n     */\r\n    root.md4 = exports;\r\n    if (AMD) {\r\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n        return exports;\r\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    }\r\n  }\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/js-md4/src/md4.js\n");

/***/ })

};
;